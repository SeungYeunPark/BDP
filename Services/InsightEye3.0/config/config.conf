# Section은 프로젝트 별로 1개로 한다.
# 2018.09.19 BSH 내부 컴퓨터 설정에 맞게 컴퓨터 설정 변경
[MainSection]

# [ServerSection]
#server.ip = 120.73.84.60
server.ip = 127.0.0.1
server.port = 8728

# [ServerName]
server.name = InsightEye3.0

# [DBSection]
# vendor = mysql, mariadb, oracle, sphinxdb, sqlite, elasticsearch
db.default.alias = restDB
db.vendor   = mariadb
db.ip       = 120.73.0.211
#db.ip       = 127.0.0.1
db.port     = 3306
db.user     = root
db.pw       = !root!
db.sid      = aiweb

# 20180801 parksy3
# default DB 를 제외하고 사용할 DB는 아래에 적는다. db.alias에 적은 내용은 그 아래에 'db.vendor.얼라이어스' 형태로 작성해야 한다.
# 이후에는 DBFactory().getConnection('ieDB') 이런식으로 connection 파라메터에 사용할 db명을 넣고 사용한다.

db.alias = insightEyeDS, sphinxDS, issueDetectDS, elasticSearchDS

db.vendor.insightEyeDS = mariadb
db.ip.insightEyeDS = 120.73.0.211
db.port.insightEyeDS = 3306
db.user.insightEyeDS = root
db.pw.insightEyeDS = !root!
db.sid.insightEyeDS = ems

db.vendor.sphinxDS = sphinxdb
db.ip.sphinxDS = 120.73.0.211
db.port.sphinxDS = 9306
db.user.sphinxDS = root
db.pw.sphinxDS =
db.sid.sphinxDS = ems

db.vendor.issueDetectDS = sqlite
db.path.issueDetectDS = D:/WorkSpace/InsightEye3.0/file/model/issueDetect/database/

db.vendor.elasticSearchDS = elasticsearch
db.ip.elasticSearchDS = 120.73.84.62
db.port.elasticSearchDS = 9200
db.index.elasticSearchDS = insight_eye_sphinx


# [Config]
conf.reload.time = 1
conf.reload.unit = Minutes

# [LogSection]
log.default.dir=D:/WorkSpace/InsightEye3.0/source/engine/conf/logging.conf
conf.default.dir=D:/WorkSpace/InsightEye3.0/source/engine/conf/config.conf

# [FileSection]
file.attach.org.path =
file.attach.new.path =

# [File]
file.json.name = JSONFile
file.scenario.save.dir = D:/WorkSpace/InsightEye3.0/source/engine/file/

# [Encode]
convert.encode.enable = false
#convert.encode.enable = true
# windows7
#convert.encode.charset = cp949
convert.encode.charset = utf8

# [JWT]
jwt.enable = true
jwt.json.name = JSONWebToken
jwt.header.type = JWT
jwt.header.algorithms = HS256
jwt.payload.iss = AsianaIDT
jwt.payload.sub = CreateToken

# [Interactive]
interactive.json.name = InteractiveText
interactive.sqllite.path = bizService/interactive/sqlLite/IN_INTERACTIVE_DEPTH.db
interactive.urlencode.enable = true

# [Mail]
mail.scenario.contents.title = Smart Glass
mail.scenario.contents.body = 에서 전송되었습니다.
#mail.scenario.address.from = aems@asianaidt.com
mail.scenario.smtp = gtcasarray.kumho.kumhogroup.com
mail.scenario.smtp.id = kumho\aems
mail.scenario.smtp.pw = aems
#mail.scenario.save.dir = ./mail/
mail.scenario.save.dir = /home/aiserver/ai/mysite/mail/

# [konlpy mecab]
konlpy.mecab.enable = True
konlpy.mecab.tagger.dir = -d C:/mecab/mecab-ko-dic
#konlpy.mecab.tagger.dir = -d /usr/local/lib/mecab/dic/mecab-ko-dic

# [Crawler]
crawler.WebDriver.PhantomJS.name = PhantomJS
crawler.WebDriver.PhantomJS.dir = D:/WorkSpace/InsightEye3.0/program/Windows/PhantomJS/phantomjs-2.1.1-windows/bin/phantomjs.exe
crawler.WebDriver.Chrome.name = Chrome
crawler.WebDriver.Chrome.dir = D:/WorkSpace/InsightEye3.0/program/Windows/Chromdriver/chromedriver_win32/chromedriver.exe

#댓글
crawler.daum.comment.limit = 100
#대댓글
crawler.daum.comment.reply.limit = 10

#
# [Analysis]
analysis.issueDetect.path.bk = D:/WorkSpace/InsightEye3.0/file/model/issueDetect/backup/
analysis.issueDetect.path.db = D:/WorkSpace/InsightEye3.0/file/model/issueDetect/database/
analysis.issueDetect.path.file = D:/WorkSpace/InsightEye3.0/file/model/issueDetect/json/

#analysis.wordcloud.db.vendor = sphinxdb
#analysis.wordcloud.db.alias = sphinxDS
analysis.wordcloud.db.vendor = elasticsearch
analysis.wordcloud.db.alias = elasticSearchDS
analysis.wordcloud.db.limitSize = 1000000
analysis.association.db.vendor = elasticsearch
analysis.association.db.alias = elasticSearchDS
analysis.association.db.limitSize = 1000000

# [Exception]
exception.error.insert.enable = True